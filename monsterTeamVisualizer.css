.main-container {
  width: 100%;
  height: 100%;
  
  /* The elements are lined up in a chain and wrapped if there is not enough 
   * space. */
  display: flex;
  flex-wrap: wrap;
  
  /* Defines from which side the chain gets filled up. */
  flex-direction: {{slotFillDirection}};
  
  /* Horizontal and vertical alignment. */
  justify-content: {{slotDistroX}};
  align-content: {{slotDistroY}};
  
  /* Spacing between elements. */
  row-gap: {{slotRowGap}}px;
  column-gap: {{slotColGap}}px;
}

.monster-slot {
  /* 'Absolute' elements are positioned relative to their closest positioned 
   * ancestors. */
  position: relative;
  
  /* Dimensions of each slot. */
  width: {{slotWidth}}px;
  height: {{slotHeight}}px;
  
  /* Slots keep their size (they donâ€™t grow or shrink). */
  flex: none;
}

.monster-layer {
  /* Each layer takes up all the space of its parent. */
  width: 100%;
  height: 100%;
}

.monster-background {
  /* For layering. */
  position: absolute;
  
  /* Offset for the background. */
  left: {{bgOffsetX}}px;
  top: {{bgOffsetY}}px;
}

.monster-foreground {
  /* For layering. */
  position: absolute;
  
  /* Offset for the foreground. */
  left: {{fgOffsetX}}px;
  top: {{fgOffsetY}}px;
}

.monster-layer img {
  position: absolute;
  
  /* Centers images which are children of a 'monster-layer'. Note that the parent
   * itself is not centered and might have an offset. */
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  
  /* The replaced content is made to fill the box, while preserving its aspect 
   * ratio. */
  object-fit: contain;
}

.monster-background img {
  /* Used by object-fit property. */
  width: {{bgScale}}%;
  height: {{bgScale}}%;
}

.monster-foreground img {
  /* Used by object-fit property. */
  width: {{fgScale}}%;
  height: {{fgScale}}%;
}
